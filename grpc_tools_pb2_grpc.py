# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_tools_pb2 as grpc__tools__pb2


class MafiaGameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnClientConnect = channel.unary_unary(
                '/mafia_game.MafiaGame/OnClientConnect',
                request_serializer=grpc__tools__pb2.PlayerName.SerializeToString,
                response_deserializer=grpc__tools__pb2.PlayerId.FromString,
                )
        self.OnClientAction = channel.unary_unary(
                '/mafia_game.MafiaGame/OnClientAction',
                request_serializer=grpc__tools__pb2.ActionRequest.SerializeToString,
                response_deserializer=grpc__tools__pb2.ActionResponse.FromString,
                )
        self.OnClientHeartbeat = channel.unary_unary(
                '/mafia_game.MafiaGame/OnClientHeartbeat',
                request_serializer=grpc__tools__pb2.PlayerId.SerializeToString,
                response_deserializer=grpc__tools__pb2.Actions.FromString,
                )
        self.GetAllPlayers = channel.unary_unary(
                '/mafia_game.MafiaGame/GetAllPlayers',
                request_serializer=grpc__tools__pb2.Empty.SerializeToString,
                response_deserializer=grpc__tools__pb2.PlayerList.FromString,
                )
        self.GetPlayerStats = channel.unary_unary(
                '/mafia_game.MafiaGame/GetPlayerStats',
                request_serializer=grpc__tools__pb2.PlayerId.SerializeToString,
                response_deserializer=grpc__tools__pb2.PlayerStats.FromString,
                )
        self.GetValidActions = channel.unary_unary(
                '/mafia_game.MafiaGame/GetValidActions',
                request_serializer=grpc__tools__pb2.PlayerId.SerializeToString,
                response_deserializer=grpc__tools__pb2.Actions.FromString,
                )
        self.GetSessionInfo = channel.unary_unary(
                '/mafia_game.MafiaGame/GetSessionInfo',
                request_serializer=grpc__tools__pb2.PlayerId.SerializeToString,
                response_deserializer=grpc__tools__pb2.SessionInfo.FromString,
                )
        self.GetCurrentSessions = channel.unary_unary(
                '/mafia_game.MafiaGame/GetCurrentSessions',
                request_serializer=grpc__tools__pb2.Empty.SerializeToString,
                response_deserializer=grpc__tools__pb2.SidList.FromString,
                )
        self.GetPastSessions = channel.unary_unary(
                '/mafia_game.MafiaGame/GetPastSessions',
                request_serializer=grpc__tools__pb2.Empty.SerializeToString,
                response_deserializer=grpc__tools__pb2.SidList.FromString,
                )
        self.GetScoreboard = channel.unary_unary(
                '/mafia_game.MafiaGame/GetScoreboard',
                request_serializer=grpc__tools__pb2.SessionId.SerializeToString,
                response_deserializer=grpc__tools__pb2.Scoreboard.FromString,
                )
        self.GetLightSessionInfo = channel.unary_unary(
                '/mafia_game.MafiaGame/GetLightSessionInfo',
                request_serializer=grpc__tools__pb2.PlayerId.SerializeToString,
                response_deserializer=grpc__tools__pb2.LightSessionInfo.FromString,
                )
        self.GetNonSessionPids = channel.unary_unary(
                '/mafia_game.MafiaGame/GetNonSessionPids',
                request_serializer=grpc__tools__pb2.Empty.SerializeToString,
                response_deserializer=grpc__tools__pb2.PidList.FromString,
                )


class MafiaGameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OnClientConnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnClientAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnClientHeartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayerStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValidActions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSessionInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentSessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPastSessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScoreboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLightSessionInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNonSessionPids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaGameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnClientConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.OnClientConnect,
                    request_deserializer=grpc__tools__pb2.PlayerName.FromString,
                    response_serializer=grpc__tools__pb2.PlayerId.SerializeToString,
            ),
            'OnClientAction': grpc.unary_unary_rpc_method_handler(
                    servicer.OnClientAction,
                    request_deserializer=grpc__tools__pb2.ActionRequest.FromString,
                    response_serializer=grpc__tools__pb2.ActionResponse.SerializeToString,
            ),
            'OnClientHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.OnClientHeartbeat,
                    request_deserializer=grpc__tools__pb2.PlayerId.FromString,
                    response_serializer=grpc__tools__pb2.Actions.SerializeToString,
            ),
            'GetAllPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllPlayers,
                    request_deserializer=grpc__tools__pb2.Empty.FromString,
                    response_serializer=grpc__tools__pb2.PlayerList.SerializeToString,
            ),
            'GetPlayerStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayerStats,
                    request_deserializer=grpc__tools__pb2.PlayerId.FromString,
                    response_serializer=grpc__tools__pb2.PlayerStats.SerializeToString,
            ),
            'GetValidActions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValidActions,
                    request_deserializer=grpc__tools__pb2.PlayerId.FromString,
                    response_serializer=grpc__tools__pb2.Actions.SerializeToString,
            ),
            'GetSessionInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSessionInfo,
                    request_deserializer=grpc__tools__pb2.PlayerId.FromString,
                    response_serializer=grpc__tools__pb2.SessionInfo.SerializeToString,
            ),
            'GetCurrentSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentSessions,
                    request_deserializer=grpc__tools__pb2.Empty.FromString,
                    response_serializer=grpc__tools__pb2.SidList.SerializeToString,
            ),
            'GetPastSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPastSessions,
                    request_deserializer=grpc__tools__pb2.Empty.FromString,
                    response_serializer=grpc__tools__pb2.SidList.SerializeToString,
            ),
            'GetScoreboard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScoreboard,
                    request_deserializer=grpc__tools__pb2.SessionId.FromString,
                    response_serializer=grpc__tools__pb2.Scoreboard.SerializeToString,
            ),
            'GetLightSessionInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLightSessionInfo,
                    request_deserializer=grpc__tools__pb2.PlayerId.FromString,
                    response_serializer=grpc__tools__pb2.LightSessionInfo.SerializeToString,
            ),
            'GetNonSessionPids': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNonSessionPids,
                    request_deserializer=grpc__tools__pb2.Empty.FromString,
                    response_serializer=grpc__tools__pb2.PidList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mafia_game.MafiaGame', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MafiaGame(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OnClientConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/OnClientConnect',
            grpc__tools__pb2.PlayerName.SerializeToString,
            grpc__tools__pb2.PlayerId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OnClientAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/OnClientAction',
            grpc__tools__pb2.ActionRequest.SerializeToString,
            grpc__tools__pb2.ActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OnClientHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/OnClientHeartbeat',
            grpc__tools__pb2.PlayerId.SerializeToString,
            grpc__tools__pb2.Actions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetAllPlayers',
            grpc__tools__pb2.Empty.SerializeToString,
            grpc__tools__pb2.PlayerList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlayerStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetPlayerStats',
            grpc__tools__pb2.PlayerId.SerializeToString,
            grpc__tools__pb2.PlayerStats.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValidActions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetValidActions',
            grpc__tools__pb2.PlayerId.SerializeToString,
            grpc__tools__pb2.Actions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSessionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetSessionInfo',
            grpc__tools__pb2.PlayerId.SerializeToString,
            grpc__tools__pb2.SessionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetCurrentSessions',
            grpc__tools__pb2.Empty.SerializeToString,
            grpc__tools__pb2.SidList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPastSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetPastSessions',
            grpc__tools__pb2.Empty.SerializeToString,
            grpc__tools__pb2.SidList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScoreboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetScoreboard',
            grpc__tools__pb2.SessionId.SerializeToString,
            grpc__tools__pb2.Scoreboard.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLightSessionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetLightSessionInfo',
            grpc__tools__pb2.PlayerId.SerializeToString,
            grpc__tools__pb2.LightSessionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNonSessionPids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia_game.MafiaGame/GetNonSessionPids',
            grpc__tools__pb2.Empty.SerializeToString,
            grpc__tools__pb2.PidList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
